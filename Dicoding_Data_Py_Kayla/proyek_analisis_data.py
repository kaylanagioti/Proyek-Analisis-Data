# -*- coding: utf-8 -*-
"""proyek_analisis_data.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NEceZkNrsCVQ1XXGrhNgzQWNnJFquIUD
"""

import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Fungsi untuk memuat data
def load_data():
    orders = pd.read_csv('C:/Users/User/OneDrive/Documents/Dicoding_Data_Py_Kayla/data/olist_orders_dataset.csv')
    order_items = pd.read_csv('C:/Users/User/OneDrive/Documents/Dicoding_Data_Py_Kayla/data/olist_order_items_dataset.csv')
    products = pd.read_csv('C:/Users/User/OneDrive/Documents/Dicoding_Data_Py_Kayla/data/olist_products_dataset.csv')
    order_reviews = pd.read_csv('C:/Users/User/OneDrive/Documents/Dicoding_Data_Py_Kayla/data/olist_order_reviews_dataset.csv')
    return orders, order_items, products, order_reviews

# Memuat data
orders, order_items, products, order_reviews = load_data()

# Menggabungkan data order_items dengan products
order_product = pd.merge(order_items, products, on='product_id')

# Menggabungkan data order_product dengan orders
order_product = pd.merge(order_product, orders, on='order_id')

# Memastikan data dalam periode 2016-2018
order_product['order_purchase_timestamp'] = pd.to_datetime(order_product['order_purchase_timestamp'])
order_product = order_product[(order_product['order_purchase_timestamp'].dt.year >= 2016) &
                              (order_product['order_purchase_timestamp'].dt.year <= 2018)]

# Menggabungkan data order_reviews dengan order_product
order_reviews_product = pd.merge(order_reviews, order_product, on='order_id')

# Fungsi untuk analisis penjualan kategori produk tertinggi
def get_top_10_categories(order_product):
    category_sales = order_product.groupby('product_category_name')['order_item_id'].count().reset_index()
    category_sales.columns = ['product_category_name', 'sales']
    category_sales = category_sales.sort_values(by='sales', ascending=False)
    return category_sales.head(10)

# Fungsi untuk analisis korelasi faktor-faktor yang mempengaruhi rating
def get_review_correlation(order_reviews_product):
    numeric_cols = order_reviews_product.select_dtypes(include=[np.number]).columns
    correlation = order_reviews_product[numeric_cols].corr()
    return correlation

# Analisis data
top_10_categories = get_top_10_categories(order_product)
correlation = get_review_correlation(order_reviews_product)

# Dashboard Streamlit
st.title("Analisis Data E-commerce Brazil")

# Bagian untuk penjualan kategori produk tertinggi
st.header("Penjualan Kategori Produk Tertinggi (2016-2018)")
st.write("Berikut adalah 10 kategori produk dengan penjualan tertinggi selama periode 2016-2018:")

# Visualisasi untuk kategori produk dengan penjualan tertinggi
plt.figure(figsize=(12, 8))
sns.barplot(x='sales', y='product_category_name', data=top_10_categories)
plt.title('Top 10 Kategori Produk dengan Penjualan Tertinggi (2016-2018)')
plt.xlabel('Jumlah Penjualan')
plt.ylabel('Kategori Produk')
st.pyplot(plt)

# Bagian untuk analisis korelasi rating ulasan pelanggan
st.header("Faktor-faktor yang Mempengaruhi Rating Ulasan Pelanggan")
st.write("Berikut adalah heatmap yang menunjukkan korelasi antara rating ulasan pelanggan dengan faktor-faktor lainnya:")

# Visualisasi heatmap korelasi
plt.figure(figsize=(12, 8))
sns.heatmap(correlation, annot=True, cmap='coolwarm', linewidths=.5)
plt.title('Korelasi antara Rating dengan Faktor-faktor lain')
st.pyplot(plt)

# Menampilkan tabel korelasi dengan kolom review_score
st.write("Korelasi dengan kolom review_score:")
st.write(correlation['review_score'].sort_values(ascending=False))

# Kesimpulan
st.header("Kesimpulan")
st.write(f"Kategori produk dengan penjualan tertinggi selama periode 2016-2018 adalah {top_10_categories.iloc[0, 0]}.")
st.write(f"Faktor yang paling memengaruhi rating ulasan pelanggan terhadap produk adalah {correlation['review_score'].nlargest(2).index[1]}.")