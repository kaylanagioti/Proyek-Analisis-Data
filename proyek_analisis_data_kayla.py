# -*- coding: utf-8 -*-
"""Proyek Analisis Data Kayla.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QVuSCHgqUixVuUYM0yfY3PvvLXRId9Oi

# Proyek Analisis Data: Brazilian E-Commerce Public Dataset by Olist
- **Nama:** Kayla Nagioti Nasution
- **Email:** kayla.nst@gmail.com
- **ID Dicoding:** kaylanagioti

## Menentukan Pertanyaan Bisnis

- Pertanyaan 1 : Produk kategori mana yang memiliki penjualan tertinggi selama periode 2016-2018?
- Pertanyaan 2 : Faktor-faktor apa yang paling memengaruhi rating ulasan pelanggan terhadap produk?

## Import Semua Packages/Library yang Digunakan
"""

# Import semua packages/library yang digunakan
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Mengatur style visualisasi
sns.set(style="whitegrid")

# Mengatur ukuran visualisasi
plt.rcParams['figure.figsize'] = [10, 6]

"""## Data Wrangling

### Gathering Data
"""

orders = pd.read_csv('https://raw.githubusercontent.com/kaylanagioti/Proyek-Analisis-Data/main/Dicoding_Data_Py_Kayla/data/olist_orders_dataset.csv')
order_items = pd.read_csv('https://raw.githubusercontent.com/kaylanagioti/Proyek-Analisis-Data/main/Dicoding_Data_Py_Kayla/data/olist_order_items_dataset.csv')
products = pd.read_csv('https://raw.githubusercontent.com/kaylanagioti/Proyek-Analisis-Data/main/Dicoding_Data_Py_Kayla/data/olist_products_dataset.csv')
order_reviews = pd.read_csv('https://raw.githubusercontent.com/kaylanagioti/Proyek-Analisis-Data/main/Dicoding_Data_Py_Kayla/data/olist_order_reviews_dataset.csv')

data = {'orders': orders,
        'items': order_items,
        'products': products,
        'reviews': order_reviews}

print(orders.head())
print(order_items.head())
print(products.head())
print(order_reviews.head())

"""### Assessing Data"""

for df_name, df in data.items():
  print('\n', data[df_name].info())

datetime_oo = ["order_purchase_timestamp","order_approved_at","order_delivered_carrier_date","order_delivered_customer_date","order_estimated_delivery_date"]
for column in datetime_oo:
  data['orders'][column] = pd.to_datetime(data['orders'][column])

datetime_oi = ["shipping_limit_date"]

for column in datetime_oi:
  data['items'][column] = pd.to_datetime(data['items'][column])

datetime_or = ["review_creation_date","review_answer_timestamp"]

for column in datetime_or:
  data['reviews'][column] = pd.to_datetime(data['reviews'][column])

# Inisialisasi dictionary untuk menyimpan jumlah duplikat dan total sampel
duplicate_counts = {}
total_sample_counts = {}

# Hitung dan simpan jumlah duplikat dan total sampel untuk setiap DataFrame
for df_name, df in data.items():
    duplicate_counts[df_name] = df.duplicated().sum()  # Hitung jumlah baris duplikat
    total_sample_counts[df_name] = len(df)  # Hitung jumlah total sampel

# Buat DataFrame dari dictionary
duplicate_counts_df = pd.DataFrame.from_dict(duplicate_counts, orient='index', columns=['Jumlah Duplikat'])
total_sample_counts_df = pd.DataFrame.from_dict(total_sample_counts, orient='index', columns=['Jumlah Total Sampel'])

# Gabungkan kedua DataFrame dengan menggabungkan secara horizontal
pd.concat([total_sample_counts_df, duplicate_counts_df], axis=1)

# Inisialisasi dictionary untuk menyimpan jumlah nilai null untuk setiap DataFrame
null_counts = {}

# Hitung dan simpan jumlah nilai null untuk setiap DataFrame
for df_name, df in data.items():
    null_counts[df_name] = df.isna().sum()  # Hitung jumlah nilai null
    print(df_name, '\n', null_counts[df_name], '\n')  # Cetak nama DataFrame dan jumlah nilai null

"""### Cleaning Data"""

# Menghapus baris yang mengandung nilai null di kolom yang krusial
orders.dropna(subset=['order_id', 'customer_id'], inplace=True)
order_items.dropna(subset=['order_id', 'product_id'], inplace=True)
products.dropna(subset=['product_id'], inplace=True)
order_reviews.dropna(subset=['order_id'], inplace=True)

# Memastikan tidak ada duplikat
orders.drop_duplicates(inplace=True)
order_items.drop_duplicates(inplace=True)
products.drop_duplicates(inplace=True)
order_reviews.drop_duplicates(inplace=True)

"""Menggabungkan Data untuk Analisis"""

# Menggabungkan data order_items dengan products
order_product = pd.merge(order_items, products, on='product_id')

# Menggabungkan data order_product dengan orders
order_product = pd.merge(order_product, orders, on='order_id')

# Memastikan data dalam periode 2016-2018
order_product['order_purchase_timestamp'] = pd.to_datetime(order_product['order_purchase_timestamp'])
order_product = order_product[(order_product['order_purchase_timestamp'].dt.year >= 2016) &
                              (order_product['order_purchase_timestamp'].dt.year <= 2018)]

# Menggabungkan data order_reviews dengan order_product
order_reviews_product = pd.merge(order_reviews, order_product, on='order_id')

# Mengubah tipe data tanggal pada order_reviews
order_reviews['review_creation_date'] = pd.to_datetime(order_reviews['review_creation_date'])
order_reviews['review_answer_timestamp'] = pd.to_datetime(order_reviews['review_answer_timestamp'])

"""## Exploratory Data Analysis (EDA)

### Explore

Pembersihan dan Pra-pemrosesan Data
- saya memuat dataset: orders, order_items, products, dan order_reviews.
- saya menggabungkan dataset ini untuk membuat pandangan komprehensif terhadap data.
- saya menangani nilai-nilai yang hilang dan memastikan tipe data sesuai untuk analisis.

Statistik Deskriptif
- **Pesanan**:
  - Jumlah pesanan: `len(orders)`
  - Periode waktu: `orders['order_purchase_timestamp'].min()` hingga `orders['order_purchase_timestamp'].max()`

- **Produk**:
  - Jumlah produk unik: `products['product_id'].nunique()`
  - Jumlah kategori unik: `products['product_category_name'].nunique()`

- **Item Pesanan**:
  - Jumlah item terjual: `order_items['order_item_id'].count()`
  - Total pendapatan: `order_items['price'].sum()`
"""

# Mengelompokkan data berdasarkan kategori produk dan menghitung jumlah penjualan
category_sales = order_product.groupby('product_category_name')['order_item_id'].count().reset_index()
category_sales.columns = ['product_category_name', 'sales']
category_sales = category_sales.sort_values(by='sales', ascending=False)

# Menampilkan 10 kategori produk dengan penjualan tertinggi
top_10_categories = category_sales.head(10)
print(top_10_categories)

"""Insight: Kategori produk dengan penjualan tertinggi selama periode 2016-2018 adalah cama_mesa_banho."""

# Memilih kolom numerik
numeric_cols = order_reviews_product.select_dtypes(include=[np.number]).columns

# Menghitung korelasi antara kolom numerik
correlation = order_reviews_product[numeric_cols].corr()

# Menampilkan korelasi dengan kolom review_score
print(correlation['review_score'].sort_values(ascending=False))

"""Faktor-faktor yang paling memengaruhi rating ulasan pelanggan adalah faktor-faktor dengan korelasi tertinggi terhadap review_score. Faktor tertinggi adalah product_photos_qty

## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

# Visualisasi untuk kategori produk dengan penjualan tertinggi
plt.figure(figsize=(12, 8))
sns.barplot(x='sales', y='product_category_name', data=top_10_categories)
plt.title('Top 10 Kategori Produk dengan Penjualan Tertinggi (2016-2018)')
plt.xlabel('Jumlah Penjualan')
plt.ylabel('Kategori Produk')
plt.show()

"""### Pertanyaan 2:"""

# Visualisasi heatmap korelasi
plt.figure(figsize=(12, 8))
sns.heatmap(correlation, annot=True, cmap='coolwarm', linewidths=.5)
plt.title('Korelasi antara Rating dengan Faktor-faktor lain')
plt.show()

"""## Conclusion"""

print("Kesimpulan Pertanyaan 1: Kategori produk dengan penjualan tertinggi selama periode 2016-2018 adalah {}.".format(category_sales.iloc[0, 0]))

print("Kesimpulan Pertanyaan 2: Faktor-faktor yang paling memengaruhi rating ulasan pelanggan terhadap produk adalah faktor-faktor yang memiliki korelasi tertinggi dengan rating, seperti {}.".format(correlation['review_score'].nlargest(2).index[1]))

"""- Conclution pertanyaan 1
Kesimpulan Pertanyaan 1: Kategori produk dengan penjualan tertinggi selama periode 2016-2018 adalah cama_mesa_banho.
- Conclution pertanyaan 2
Faktor-faktor yang paling memengaruhi rating ulasan pelanggan terhadap produk adalah faktor-faktor yang memiliki korelasi tertinggi dengan rating, seperti product_photos_qty.
"""